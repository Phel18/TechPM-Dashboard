// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechPMDashboard.Data;

#nullable disable

namespace TechPM_Dashboard.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250329104059_modelsAgain")]
    partial class modelsAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TechPMDashboard.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Upgrade company infrastructure",
                            EndDate = new DateTime(2025, 5, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4799),
                            Name = "Infrastructure Upgrade",
                            ProgressPercentage = 65,
                            StartDate = new DateTime(2025, 1, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4755),
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Migrate data to new system",
                            EndDate = new DateTime(2025, 6, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4815),
                            Name = "Data Migration",
                            ProgressPercentage = 42,
                            StartDate = new DateTime(2025, 2, 28, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4813),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Integrate with cloud services",
                            EndDate = new DateTime(2025, 7, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4828),
                            Name = "Cloud Integration",
                            ProgressPercentage = 28,
                            StartDate = new DateTime(2024, 12, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4824),
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Conduct security audit",
                            EndDate = new DateTime(2025, 4, 13, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4833),
                            Name = "Security Audit",
                            ProgressPercentage = 85,
                            StartDate = new DateTime(2024, 11, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4831),
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Setup new networking infrastructure",
                            EndDate = new DateTime(2025, 4, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4849),
                            Name = "Networking Setup",
                            ProgressPercentage = 72,
                            StartDate = new DateTime(2024, 12, 29, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4846),
                            Status = 0
                        });
                });

            modelBuilder.Entity("TechPMDashboard.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AssignedToId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedToId = 3,
                            Description = "Install and configure new network switches in server room",
                            DueDate = new DateTime(2025, 4, 3, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4949),
                            Name = "Configure network switches",
                            ProjectId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            AssignedToId = 4,
                            Description = "Transfer all user profiles and data to the upgraded database",
                            DueDate = new DateTime(2025, 3, 27, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4957),
                            Name = "Migrate user data to new system",
                            ProjectId = 2,
                            Status = 3
                        },
                        new
                        {
                            Id = 3,
                            AssignedToId = 2,
                            Description = "Configure security groups and network ACLs for AWS deployment",
                            DueDate = new DateTime(2025, 3, 24, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4985),
                            Name = "Set up AWS security groups",
                            ProjectId = 3,
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            AssignedToId = 1,
                            Description = "Run security penetration tests against production environment",
                            DueDate = new DateTime(2025, 4, 8, 12, 40, 58, 125, DateTimeKind.Local).AddTicks(4990),
                            Name = "Conduct penetration testing",
                            ProjectId = 4,
                            Status = 0
                        });
                });

            modelBuilder.Entity("TechPMDashboard.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AllocationPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllocationPercentage = 115,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Role = "Senior Developer"
                        },
                        new
                        {
                            Id = 2,
                            AllocationPercentage = 85,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Role = "DevOps Engineer"
                        },
                        new
                        {
                            Id = 3,
                            AllocationPercentage = 60,
                            Email = "robert.johnson@example.com",
                            FirstName = "Robert",
                            LastName = "Johnson",
                            Role = "Network Administrator"
                        },
                        new
                        {
                            Id = 4,
                            AllocationPercentage = 40,
                            Email = "amanda.parker@example.com",
                            FirstName = "Amanda",
                            LastName = "Parker",
                            Role = "Database Administrator"
                        });
                });

            modelBuilder.Entity("TechPMDashboard.Models.ResourceAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AllocationPercentage")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ResourceAllocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllocationPercentage = 30,
                            ProjectId = 1,
                            ResourceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AllocationPercentage = 40,
                            ProjectId = 2,
                            ResourceId = 1
                        },
                        new
                        {
                            Id = 3,
                            AllocationPercentage = 45,
                            ProjectId = 3,
                            ResourceId = 1
                        },
                        new
                        {
                            Id = 4,
                            AllocationPercentage = 25,
                            ProjectId = 1,
                            ResourceId = 2
                        },
                        new
                        {
                            Id = 5,
                            AllocationPercentage = 60,
                            ProjectId = 3,
                            ResourceId = 2
                        },
                        new
                        {
                            Id = 6,
                            AllocationPercentage = 60,
                            ProjectId = 1,
                            ResourceId = 3
                        },
                        new
                        {
                            Id = 7,
                            AllocationPercentage = 40,
                            ProjectId = 2,
                            ResourceId = 4
                        });
                });

            modelBuilder.Entity("TechPMDashboard.Models.Risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MitigationPlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Risks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Database compatibility issues",
                            IsResolved = false,
                            Level = 2,
                            MitigationPlan = "Test in staging environment first",
                            ProjectId = 2
                        },
                        new
                        {
                            Id = 2,
                            Description = "Security vulnerabilities in cloud setup",
                            IsResolved = false,
                            Level = 2,
                            MitigationPlan = "Perform security audit",
                            ProjectId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hardware delivery delays",
                            IsResolved = false,
                            Level = 1,
                            MitigationPlan = "Order from alternate vendor",
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Staff training availability",
                            IsResolved = false,
                            Level = 0,
                            MitigationPlan = "Schedule training sessions in advance",
                            ProjectId = 4
                        });
                });

            modelBuilder.Entity("TechPMDashboard.Models.ProjectTask", b =>
                {
                    b.HasOne("TechPMDashboard.Models.Resource", "AssignedTo")
                        .WithMany("AssignedTasks")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("TechPMDashboard.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TechPMDashboard.Models.ResourceAllocation", b =>
                {
                    b.HasOne("TechPMDashboard.Models.Project", "Project")
                        .WithMany("ResourceAllocations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPMDashboard.Models.Resource", "Resource")
                        .WithMany("ProjectAllocations")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("TechPMDashboard.Models.Risk", b =>
                {
                    b.HasOne("TechPMDashboard.Models.Project", "Project")
                        .WithMany("Risks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TechPMDashboard.Models.Project", b =>
                {
                    b.Navigation("ResourceAllocations");

                    b.Navigation("Risks");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TechPMDashboard.Models.Resource", b =>
                {
                    b.Navigation("AssignedTasks");

                    b.Navigation("ProjectAllocations");
                });
#pragma warning restore 612, 618
        }
    }
}
